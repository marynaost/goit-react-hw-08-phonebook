{"version":3,"sources":["redux/auth/auth-reducer.js","components/HeadersStyles.module.scss","redux/contacts/contacts-reducer.js","components/UserMenu/UserMenu.module.scss","redux/contacts/contacts-actions.js","components/Container/Container.module.scss","redux/auth/midleware.js","redux/auth/auth-slice.js","redux/store.js","components/Container/Container.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","index.js"],"names":["authApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","token","getState","auth","set","tagTypes","endpoints","builder","registerUser","mutation","query","newUser","url","method","body","invalidatesTags","loginUser","credentials","logoutUser","fetchCurrentUser","useRegisterUserMutation","useLoginUserMutation","useLogoutUserMutation","useFetchCurrentUserQuery","module","exports","filterReducer","createReducer","changeFilter","_","payload","contactsApi","fetchContacts","keepUnusedDataFor","providesTags","deleteContacts","contactId","addContact","newContact","useFetchContactsQuery","useDeleteContactsMutation","useAddContactMutation","createAction","rtkQueryErrorLogger","api","next","action","isRejectedWithValue","status","data","message","toast","error","authSlice","createSlice","name","initialState","user","email","isLoggedIn","extraReducers","addMatcher","matchFulfilled","state","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","setupListeners","dispatch","persistor","persistStore","Container","children","className","s","container","authSelectors","getIsLoggedIn","getUsername","getToken","Navigation","useSelector","to","isActive","active","link","UserMenu","type","button","onClick","AuthNav","params","styles","header","display","justifyContent","alignItems","AppBar","style","PublicRoute","restricted","redirectTo","PrivateRoute","HomePage","lazy","ContactPage","RegisterPage","LoginPage","App","isLoading","skip","fallback","textAlign","color","path","element","autoClose","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c1b1a22a.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: 'authApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://connections-api.herokuapp.com',\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = getState().auth.token;\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`);\r\n      }\r\n      return headers;\r\n    },\r\n  }),\r\n  tagTypes: ['Auth'],\r\n  endpoints: builder => ({\r\n    registerUser: builder.mutation({\r\n      query: newUser => ({\r\n        url: '/users/signup',\r\n        method: 'POST',\r\n        body: newUser,\r\n      }),\r\n      invalidatesTags: ['Auth'],\r\n    }),\r\n    loginUser: builder.mutation({\r\n      query: credentials => ({\r\n        url: '/users/login',\r\n        method: 'POST',\r\n        body: credentials,\r\n      }),\r\n      invalidatesTags: ['Auth'],\r\n    }),\r\n    logoutUser: builder.mutation({\r\n      query: () => ({\r\n        url: '/users/logout',\r\n        method: 'POST',\r\n      }),\r\n      invalidatesTags: ['Auth'],\r\n    }),\r\n    fetchCurrentUser: builder.query({\r\n      query: () => '/users/current',\r\n      invalidatesTags: ['Auth'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useRegisterUserMutation,\r\n  useLoginUserMutation,\r\n  useLogoutUserMutation,\r\n  useFetchCurrentUserQuery,\r\n} = authApi;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"HeadersStyles_link__3SqwE\",\"active\":\"HeadersStyles_active__k60Ok HeadersStyles_link__3SqwE\"};","import { createReducer } from '@reduxjs/toolkit';\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport { changeFilter } from './contacts-actions';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://connections-api.herokuapp.com',\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = getState().auth.token;\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`);\r\n      }\r\n      return headers;\r\n    },\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => '/contacts',\r\n      keepUnusedDataFor: 5,\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContacts: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactsMutation,\r\n  useAddContactMutation,\r\n} = contactsApi;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3JXUj\",\"name\":\"UserMenu_name__3DVRV\",\"button\":\"UserMenu_button__2jAoZ\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Bbch\"};","import { isRejectedWithValue } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const rtkQueryErrorLogger = api => next => action => {\r\n  if (isRejectedWithValue(action)) {\r\n    if (action.payload?.status === 400 && action.payload?.data?.message) {\r\n      toast.error(`${action.payload?.data?.message}`);\r\n    } else if (action.payload?.status === 400) {\r\n      toast.error('Mail and password entered incorrectly');\r\n    } else if (action.payload?.status === 401) {\r\n      toast.error('Unauthorized');\r\n    } else if (action.payload?.status === 500) {\r\n      toast.error('Server error');\r\n    } else {\r\n      toast.error('Bad Request');\r\n    }\r\n  }\r\n\r\n  return next(action);\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { authApi } from './auth-reducer';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: builder => {\r\n    builder.addMatcher(\r\n      authApi.endpoints.registerUser.matchFulfilled,\r\n      (state, { payload }) => {\r\n        state.user = payload.user;\r\n        state.token = payload.token;\r\n        state.isLoggedIn = true;\r\n      },\r\n    );\r\n    builder.addMatcher(\r\n      authApi.endpoints.loginUser.matchFulfilled,\r\n      (state, { payload }) => {\r\n        state.user = payload.user;\r\n        state.token = payload.token;\r\n        state.isLoggedIn = true;\r\n      },\r\n    );\r\n    builder.addMatcher(authApi.endpoints.logoutUser.matchFulfilled, state => {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    });\r\n    builder.addMatcher(\r\n      authApi.endpoints.fetchCurrentUser.matchFulfilled,\r\n      (state, { payload }) => {\r\n        state.user = payload;\r\n        state.isLoggedIn = true;\r\n      },\r\n    );\r\n  },\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { rtkQueryErrorLogger } from './auth/midleware';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { authApi } from './auth/auth-reducer';\r\nimport { authSlice } from './auth/auth-slice';\r\nimport { contactsApi, filterReducer } from 'redux/contacts/contacts-reducer';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authSlice.reducer),\r\n    [authApi.reducerPath]: authApi.reducer,\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter: filterReducer,\r\n  },\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n    rtkQueryErrorLogger,\r\n    contactsApi.middleware,\r\n    authApi.middleware,\r\n  ],\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n\r\nexport const persistor = persistStore(store);\r\n","import s from './Container.module.scss';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUsername = state => state.auth.user.name;\r\nconst getToken = state => state.auth.token;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getToken,\r\n};\r\nexport default authSelectors;\r\n","import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\nimport s from '../HeadersStyles.module.scss';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to=\"/\"\r\n        className={({ isActive }) => (isActive ? s.active : s.link)}\r\n      >\r\n        Home\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <>\r\n          <NavLink\r\n            to=\"/contacts\"\r\n            className={({ isActive }) => (isActive ? s.active : s.link)}\r\n          >\r\n            Contacts\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useSelector } from 'react-redux';\r\nimport { useLogoutUserMutation } from 'redux/auth/auth-reducer';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\nimport s from './UserMenu.module.scss';\r\n\r\nexport default function UserMenu() {\r\n  const name = useSelector(authSelectors.getUsername);\r\n  const [logoutUser] = useLogoutUserMutation();\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <span className={s.name}>Wellcome, {name}</span>\r\n      <button type=\"button\" className={s.button} onClick={() => logoutUser()}>\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from '../HeadersStyles.module.scss';\r\n\r\nexport default function AuthNav(params) {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={({ isActive }) => (isActive ? s.active : s.link)}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        className={({ isActive }) => (isActive ? s.active : s.link)}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation/Navigation';\r\nimport UserMenu from './UserMenu/UserMenu';\r\nimport AuthNav from './AuthNav/AuthNav';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  return (\r\n    <>\r\n      <header style={styles.header}>\r\n        <Navigation />\r\n        {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shoudRedirect = isLoggedIn && restricted;\r\n\r\n  if (shoudRedirect) {\r\n    return <Navigate to={redirectTo} />;\r\n  }\r\n  return children;\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({ children, redirectTo = '/' }) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  if (isLoggedIn) {\r\n    return children;\r\n  }\r\n  return <Navigate to={redirectTo} />;\r\n}\r\n","import { Routes, Route } from 'react-router-dom';\nimport { Suspense, lazy } from 'react';\nimport Container from 'components/Container/Container';\nimport AppBar from 'components/AppBar';\nimport PublicRoute from 'components/PublicRoute';\nimport PrivateRoute from 'components/PrivateRoute';\nimport { useSelector } from 'react-redux';\nimport { useFetchCurrentUserQuery } from 'redux/auth/auth-reducer';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst HomePage = lazy(() =>\n  import('pages/HomePage/HomePage' /* webpackChunkName: \"home\" */),\n);\nconst ContactPage = lazy(() =>\n  import('pages/ContactsPage/ContactsPage' /* webpackChunkName: \"contacts\" */),\n);\nconst RegisterPage = lazy(() =>\n  import('pages/RegisterPage/RegisterPage' /* webpackChunkName: \"register\" */),\n);\nconst LoginPage = lazy(() =>\n  import('pages/LoginPage/LoginPage' /* webpackChunkName: \"login\" */),\n);\n\nexport default function App() {\n  const token = useSelector(authSelectors.getToken);\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const { isLoading } = useFetchCurrentUserQuery(token, {\n    skip: token === null,\n  });\n\n  return (\n    <Container>\n      {!isLoading && (\n        <>\n          <AppBar />\n          <Suspense\n            fallback={\n              <h1 style={{ textAlign: 'center', color: 'white' }}>Loading..</h1>\n            }\n          >\n            <Routes>\n              <Route\n                path=\"/\"\n                element={\n                  <PublicRoute>\n                    <HomePage />\n                  </PublicRoute>\n                }\n              />\n              <Route\n                path=\"register\"\n                element={\n                  <PublicRoute redirectTo=\"/contacts\" restricted>\n                    <RegisterPage />\n                  </PublicRoute>\n                }\n              />\n              <Route\n                path=\"login\"\n                element={\n                  <PublicRoute redirectTo=\"/contacts\" restricted>\n                    <LoginPage />\n                  </PublicRoute>\n                }\n              />\n              <Route\n                path=\"contacts\"\n                element={\n                  <PrivateRoute redirectTo=\"/login\">\n                    <ContactPage />\n                  </PrivateRoute>\n                }\n              />\n              <Route\n                path=\"*\"\n                element={isLoggedIn ? <ContactPage /> : <HomePage />}\n              />\n            </Routes>\n          </Suspense>\n          <ToastContainer autoClose={2000} />\n        </>\n      )}\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from 'redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}